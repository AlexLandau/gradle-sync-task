task clean {
  doLast {
    delete 'syncDest'
    delete 'copyDest'
    delete 'otherSyncDest'
  }
}

// Note: In copy/sync specs, if there are multiple "into" blocks, every block after the first refers to a subpath of the
// first "into"'s directory.

// After running, the 'copyDest' folder contains the contents of the 'srcDir' directory.
task myCopy(type: Copy) {
  into 'copyDest'
  into('.') {
    from 'srcDir'
  }
}

// After running, the 'syncDest' folder is empty. This is the surprising behavior; I'd expect it to act like myCopy.
task mySync(type: Sync) {
  into 'syncDest'
  into('.') {
    from 'srcDir'
  }
}

// This slightly different case works as expected; 'otherSyncDest/foo' contains the contents of the 'srcDir' directory.
task otherSync(type: Sync) {
  into 'otherSyncDest'
  into('foo') {
    from 'srcDir'
  }
}

// This task correctly fails
task copyDupes1(type: Copy) {
  into 'copyDupes1'
  into('foo') {
    from 'srcDir'
  }
  into('foo') {
    from 'altSrcDir'
  }
  duplicatesStrategy = DuplicatesStrategy.FAIL
}

// This task does not fail, despite the duplicates strategy and the outputs overlapping
task copyDupes2(type: Copy) {
  into 'copyDupes2'
  into('foo') {
    from 'srcDir'
  }
  into('./foo') {
    from 'altSrcDir'
  }
  duplicatesStrategy = DuplicatesStrategy.FAIL
}
